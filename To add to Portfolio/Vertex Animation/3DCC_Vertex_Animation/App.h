////////////////////////////////////////////////////////////////////////////////
// App.h
////////////////////////////////////////////////////////////////////////////////
#ifndef _APP_H_
#define _APP_H_

#include "OGL/Glee.h"
#include <gl/glu.h>

#include "AppConfig.h"
#include "Utility/EDCamera.h"
#include "Animation/Animation.h"
#include "Animation/Interpolator.h"

template < typename T >
struct vec3;
typedef vec3<float> vec3f;

class App
{
    EDCamera m_Camera;
    EDFrame m_CameraFrame;

	Animation< vec3f > m_Animation;
	
	Interpolator< vec3f > m_Interpolator;	// Monster moving forward
	Interpolator< vec3f > m_Reverse;		// Moving moving backward

    App( ){ }
    ~App( ){ }

public:

    //////////////////////////////////////////////////////////////////////////
    // This function gets the instance of the singleton.
    // 
    // Returns
	// EDApp& the instance of the singleton.
    //////////////////////////////////////////////////////////////////////////
    static App& GetInstance( )
    {
        static App instance;
        return instance;
    }

    //////////////////////////////////////////////////////////////////////////
    // This function initalizes opengl and the demo app
    //////////////////////////////////////////////////////////////////////////
    void Initialize( );

	//////////////////////////////////////////////////////////////////////////
	// Shuts the App down
	//////////////////////////////////////////////////////////////////////////
	void Shutdown( );

    //////////////////////////////////////////////////////////////////////////
    // This is to be called when a 
    // repaint is needed.
    //////////////////////////////////////////////////////////////////////////
    void Update( );

    EDCamera& GetCamera( ) { return m_Camera; }
};

#endif // _APP_H_